version: "3"

services:
  webservice:
    build:
      context: .
      dockerfile: ./cmd/webservice/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - LYN_SERVER_ADDRESS=0.0.0.0:8080
      - LYN_DATABASE_URL=postgres://postgres:postgres@db:5432/lyn?sslmode=disable
      - LYN_JWT_SECRET=your-secret-key-here
      - LYN_USER_DATA_SERVICE_URL=http://userdataservice:8081
      - LYN_OPENAI_API_KEY=${OPENAI_API_KEY}
      - LYN_ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      - db
    networks:
      - lyn_network

  userdataservice:
    build:
      context: .
      dockerfile: ./cmd/userdataservice/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - LYN_SERVER_ADDRESS=0.0.0.0:8081
      - LYN_DATABASE_URL=postgres://postgres:postgres@db:5432/lyn_userdata?sslmode=disable
    depends_on:
      - db
    networks:
      - lyn_network

  llmproxyservice:
    build:
      context: .
      dockerfile: ./cmd/llmproxyservice/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - LYN_SERVER_ADDRESS=0.0.0.0:8082
      - LYN_OPENAI_API_KEY=${OPENAI_API_KEY}
      - LYN_ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    networks:
      - lyn_network

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_MULTIPLE_DATABASES=lyn,lyn_userdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - lyn_network

volumes:
  postgres_data:

networks:
  lyn_network:
    driver: bridge
