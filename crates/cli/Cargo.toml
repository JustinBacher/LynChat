# Description: Lyn AI Assistant CLI Client
# Copyright: (c) 2024 The Lyn Authors
# License: MIT OR Apache-2.0

[package]
name = "lyn-cli"
version = "0.1.0"
edition = "2024"
description = "Command-line interface for the Lyn AI assistant."
readme = "../README.md"                                          # Point to the workspace README
homepage = "https://github.com/your-repo/lyn"                    # TODO: Update with actual repo URL
repository = "https://github.com/your-repo/lyn"                  # TODO: Update with actual repo URL
license = "MIT OR Apache-2.0"
keywords = ["ai", "assistant", "llm", "privacy", "local", "cli"]
categories = ["command-line-utilities"]

[[bin]]
name = "lyn"         # Executable name
path = "src/main.rs"

[dependencies]
# Core engine
lyn-core = { path = "../lyn-core" } # Depend on the local core library

# Async runtime (needed for main function)
async-std = { version = "1.12", features = [
    "attributes",
    "unstable",
    "tokio1",
] }

# Command-line argument parsing
clap = { version = "4.5", features = ["derive"] }

# Logging/Tracing (for CLI output)
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling (if needed directly in CLI, otherwise rely on core errors)
# thiserror = "1.0"

# TUI implementation (LYN-17)
ratatui = { version = "0.27", features = [
    "all-widgets",
] } # Using all widgets for flexibility initially
crossterm = { version = "0.27", features = ["event-stream"] }

# Async channel for TUI/Engine communication
async-channel = "2.3"

# Async utilities (needed for StreamExt in TUI)
futures-util = "0.3"

# Markdown parsing (for TUI rendering)
pulldown-cmark = "0.11"

# Optional: Better line editing for interactive mode (LYN-16) - Consider tui-input or similar TUI input crates instead
# rustyline = "14.0"
